swagger: '2.0'
info:
  version: '2018-08-20'
  x-release: s3v4
  title: AWS S3 Control
  description: ' AWS S3 Control provides access to Amazon S3 control plane operations. '
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: s3control
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/s3control-2018-08-20.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://aws.amazon.com/s3-control/'
host: s3-control.amazonaws.com
basePath: /
x-hasEquivalentPaths: true
schemes:
  - https
  - http
consumes:
  - text/xml
produces:
  - text/xml
parameters:
  Action:
    name: Action
    in: query
    type: string
    required: true
  Version:
    name: Version
    in: query
    type: string
    required: true
  X-Amz-Content-Sha256:
    name: X-Amz-Content-Sha256
    in: header
    type: string
    required: false
  X-Amz-Date:
    name: X-Amz-Date
    in: header
    type: string
    required: false
  X-Amz-Algorithm:
    name: X-Amz-Algorithm
    in: header
    type: string
    required: false
  X-Amz-Credential:
    name: X-Amz-Credential
    in: header
    type: string
    required: false
  X-Amz-Security-Token:
    name: X-Amz-Security-Token
    in: header
    type: string
    required: false
  X-Amz-Signature:
    name: X-Amz-Signature
    in: header
    type: string
    required: false
  X-Amz-SignedHeaders:
    name: X-Amz-SignedHeaders
    in: header
    type: string
    required: false
securityDefinitions:
  hmac:
    type: apiKey
    name: Authorization
    in: header
    description: Amazon Signature authorization v4
    x-amazon-apigateway-authtype: awsSigv4
security:
  - hmac: []
paths:
  /v20180820/configuration/publicAccessBlock:
    delete:
      operationId: DeletePublicAccessBlock
      description: Removes the Public Access Block configuration for an Amazon Web Services account.
      responses:
        '200':
          description: Success
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeletePublicAccessBlockRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetPublicAccessBlock
      description: Retrieves the Public Access Block configuration for an Amazon Web Services account.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetPublicAccessBlockOutput'
        '480':
          description: NoSuchPublicAccessBlockConfiguration
          schema:
            $ref: '#/definitions/NoSuchPublicAccessBlockConfiguration'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetPublicAccessBlockRequest'
    put:
      operationId: PutPublicAccessBlock
      description: Creates or modifies the Public Access Block configuration for an Amazon Web Services account.
      responses:
        '200':
          description: Success
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/PutPublicAccessBlockRequest'
definitions:
  DeletePublicAccessBlockRequest:
    type: object
    properties: {}
  GetPublicAccessBlockOutput:
    type: object
    properties:
      PublicAccessBlockConfiguration:
        $ref: '#/definitions/PublicAccessBlockConfiguration'
        description: The Public Access Block configuration currently in effect for this Amazon Web Services account.
  GetPublicAccessBlockRequest:
    type: object
    properties: {}
  NoSuchPublicAccessBlockConfiguration: {}
  PutPublicAccessBlockRequest:
    type: object
    required:
      - PublicAccessBlockConfiguration
    properties:
      PublicAccessBlockConfiguration:
        $ref: '#/definitions/PublicAccessBlockConfiguration'
        description: The Public Access Block configuration that you want to apply to this Amazon Web Services account.
    xml:
      namespace: 'http://awss3control.amazonaws.com/doc/2018-08-20/'
  AccountId:
    type: string
  PublicAccessBlockConfiguration:
    type: object
    properties:
      BlockPublicAcls:
        $ref: '#/definitions/Setting'
        description: '<p>Specifies whether Amazon S3 should block public ACLs for buckets in this account. Setting this element to <code>TRUE</code> causes the following behavior:</p> <ul> <li> <p>PUT Bucket acl and PUT Object acl calls will fail if the specified ACL allows public access.</p> </li> <li> <p>PUT Object calls will fail if the request includes an object ACL.</p> </li> </ul> <p>Note that enabling this setting doesn''t affect existing policies or ACLs.</p>'
      IgnorePublicAcls:
        $ref: '#/definitions/Setting'
        description: <p>Specifies whether Amazon S3 should ignore public ACLs for buckets in this account. Setting this element to <code>TRUE</code> causes Amazon S3 to ignore all public ACLs on buckets in this account and any objects that they contain. </p> <p>Note that enabling this setting doesn't affect the persistence of any existing ACLs and doesn't prevent new public ACLs from being set.</p>
      BlockPublicPolicy:
        $ref: '#/definitions/Setting'
        description: <p>Specifies whether Amazon S3 should block public bucket policies for buckets in this account. Setting this element to <code>TRUE</code> causes Amazon S3 to reject calls to PUT Bucket policy if the specified bucket policy allows public access. </p> <p>Note that enabling this setting doesn't affect existing bucket policies.</p>
      RestrictPublicBuckets:
        $ref: '#/definitions/Setting'
        description: '<p>Specifies whether Amazon S3 should restrict public bucket policies for buckets in this account. If this element is set to <code>TRUE</code>, then only the bucket owner and AWS Services can access buckets with public policies.</p> <p>Note that enabling this setting doesn''t affect previously stored bucket policies, except that public and cross-account access within any public bucket policy, including non-public delegation to specific accounts, is blocked. </p>'
    description: '<p>The container element for all Public Access Block configuration options. You can enable the configuration options in any combination.</p> <p>Amazon S3 considers a bucket policy public unless at least one of the following conditions is true:</p> <ol> <li> <p>The policy limits access to a set of CIDRs using <code>aws:SourceIp</code>. For more information on CIDR, see <a href="http://www.rfc-editor.org/rfc/rfc4632.txt">http://www.rfc-editor.org/rfc/rfc4632.txt</a> </p> </li> <li> <p>The policy grants permissions, not including any "bad actions," to one of the following:</p> <ul> <li> <p>A fixed AWS principal, user, role, or service principal</p> </li> <li> <p>A fixed <code>aws:SourceArn</code> </p> </li> <li> <p>A fixed <code>aws:SourceVpc</code> </p> </li> <li> <p>A fixed <code>aws:SourceVpce</code> </p> </li> <li> <p>A fixed <code>aws:SourceOwner</code> </p> </li> <li> <p>A fixed <code>aws:SourceAccount</code> </p> </li> <li> <p>A fixed value of <code>s3:x-amz-server-side-encryption-aws-kms-key-id</code> </p> </li> <li> <p>A fixed value of <code>aws:userid</code> outside the pattern "<code>AROLEID:*</code>"</p> </li> </ul> </li> </ol> <p>"Bad actions" are those that could expose the data inside a bucket to reads or writes by the public. These actions are <code>s3:Get*</code>, <code>s3:List*</code>, <code>s3:AbortMultipartUpload</code>, <code>s3:Delete*</code>, <code>s3:Put*</code>, and <code>s3:RestoreObject</code>.</p> <p>The star notation for bad actions indicates that all matching operations are considered bad actions. For example, because <code>s3:Get*</code> is a bad action, <code>s3:GetObject</code>, <code>s3:GetObjectVersion</code>, and <code>s3:GetObjectAcl</code> are all bad actions.</p>'
  Setting:
    type: boolean
